import type { AuthLoginReturnType } from "../../interfaces/auth";
import { AbstractLogin, LoginQuerierTypes } from "./abstract-login";
export declare class BaseLogin extends AbstractLogin<void, {
    email: string;
}, {
    email: string;
    otp: string;
    recoveryCode?: string;
}> {
    private getGoogleLoginUrl;
    loginWithModal(): Promise<AuthLoginReturnType>;
    loginWithEmailOtp({ email, }: {
        email: string;
    }): Promise<AuthLoginReturnType>;
    private closeWindow;
    loginWithGoogle(args?: {
        openedWindow?: Window | null;
        closeOpenedWindow?: (openedWindow: Window) => void;
    }): Promise<AuthLoginReturnType>;
    loginWithCustomJwt({ encryptionKey, jwt, }: LoginQuerierTypes["loginWithCustomJwt"]): Promise<AuthLoginReturnType>;
    verifyEmailLoginOtp({ email, otp, recoveryCode, }: LoginQuerierTypes["verifyThirdwebEmailLoginOtp"]): Promise<AuthLoginReturnType>;
}
//# sourceMappingURL=base-login.d.ts.map