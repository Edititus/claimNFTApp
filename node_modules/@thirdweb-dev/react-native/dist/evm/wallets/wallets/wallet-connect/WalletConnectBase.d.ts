import type { WalletConnectOptions, WalletOptions } from "@thirdweb-dev/wallets";
import { WalletConnect as WalletConnectV2Wallets } from "@thirdweb-dev/wallets";
import { WCMeta } from "../../types/wc";
export type WC2Options = {
    /**
     * The WalletConnectV2 projectId.
     *
     * We provide a default projectId but recommend you get your own
     * when launching your app in production.
     */
    projectId?: string;
} & Omit<WalletOptions<WalletConnectOptions>, "projectId" | "qrcode" | "qrModalOptions" | "clientId" | "secretKey"> & {
    walletId: NonNullable<WalletOptions["walletId"]>;
};
export declare abstract class WalletConnectBase extends WalletConnectV2Wallets {
    constructor(options: WC2Options);
    cleanAsyncStorage(): Promise<void>;
    abstract getMeta(): WCMeta;
    _onWCOpenWallet(uri?: string): void;
}
/**
 * @deprecated There's no longer the need to define V1/V2 for walletConnect.
 *
 * Use WalletConnectBase instead.
 */
export declare abstract class WalletConnectV2 extends WalletConnectBase {
}
