import type { CoinbaseWalletConnector as CoinbaseWalletConnectorType, CoinbaseWalletConnectorOptions } from "../connectors/coinbase-wallet";
import { AbstractClientWallet, Connector, WalletOptions } from "@thirdweb-dev/wallets";
import { WalletOptions as WalletOptionsRC } from "@thirdweb-dev/react-core";
type CoinbaseWalletOptions = Omit<WalletOptions<CoinbaseWalletConnectorOptions>, "walletStorage" | "secretKey" | "clientId">;
export declare class CoinbaseWallet extends AbstractClientWallet<CoinbaseWalletConnectorOptions> {
    static meta: {
        name: string;
        iconURL: string;
    };
    connector?: Connector;
    coinbaseConnector?: CoinbaseWalletConnectorType;
    provider?: CoinbaseWalletConnectorType["provider"];
    static id: "coinbase";
    get walletName(): "Coinbase Wallet";
    callbackURL: URL;
    constructor(options: CoinbaseWalletOptions);
    protected getConnector(): Promise<Connector>;
}
export declare const coinbaseWallet: (config?: {
    callbackURL?: URL;
    recommended?: boolean;
}) => {
    id: "coinbase";
    meta: {
        name: string;
        iconURL: string;
    };
    create: (options: WalletOptionsRC) => CoinbaseWallet;
    config: {
        callbackURL?: URL | undefined;
        recommended?: boolean | undefined;
    } | undefined;
    recommended: boolean | undefined;
};
export {};
