import { AbstractClientWallet, walletIds } from "@thirdweb-dev/wallets";
import { MagicConnector } from "../connectors/magic/magic-connector";
export class MagicLink extends AbstractClientWallet {
    constructor(options) {
        super(walletIds.magicLink, options);
        this.options = options;
        this.initializeConnector();
    }
    async getConnector() {
        if (!this.connector) {
            return await this.initializeConnector();
        }
        return this.connector;
    }
    // my methods
    initializeConnector() {
        this.connector = new MagicConnector({
            ...this.options,
            chainId: this.options.chainId,
            chains: this.chains,
        });
        return this.connector;
    }
    getMagicSDK() {
        return this.connector?.getMagicSDK();
    }
    async autoConnect(options) {
        this.connector?.initializeMagicSDK(options);
        const magic = this.getMagicSDK();
        if (await magic.user.isLoggedIn()) {
            return super.autoConnect(options);
        }
        else {
            throw new Error("Magic user is not logged in");
        }
    }
    async disconnect() {
        const magic = this.getMagicSDK();
        await magic.user.logout();
        return super.disconnect();
    }
}
MagicLink.meta = {
    iconURL: "ipfs://QmUMBFZGXxBpgDmZzZAHhbcCL5nYvZnVaYLTajsNjLcxMU/1-Icon_Magic_Color.svg",
    name: "Magic Link",
};
MagicLink.id = walletIds.magicLink;
/**
 * @deprecated Use `MagicLink` instead
 *
 * Renamed for consistency with our React package
 */
export class MagicWallet extends MagicLink {
}
