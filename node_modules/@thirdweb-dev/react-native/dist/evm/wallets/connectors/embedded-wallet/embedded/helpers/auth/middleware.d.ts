import { AuthProvider, AuthStoredTokenWithCookieReturnType } from "@thirdweb-dev/wallets";
export declare function prePaperAuth(args: {
    authenticationMethod: AuthProvider;
    email: string;
}): Promise<void>;
export declare function postPaperAuth({ storedToken, clientId, recoveryCode, }: {
    storedToken: AuthStoredTokenWithCookieReturnType["storedToken"];
    clientId: string;
    recoveryCode?: string;
}): Promise<import("@thirdweb-dev/wallets").StoredTokenType & {
    cookieString: string;
    shouldStoreCookieString: boolean;
    isNewUser: boolean;
}>;
export declare function postPaperAuthUserManaged(storedToken: AuthStoredTokenWithCookieReturnType["storedToken"], clientId: string, password: string): Promise<import("@thirdweb-dev/wallets").StoredTokenType & {
    cookieString: string;
    shouldStoreCookieString: boolean;
    isNewUser: boolean;
}>;
