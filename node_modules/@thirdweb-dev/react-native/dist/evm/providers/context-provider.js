import { walletIds } from "@thirdweb-dev/wallets";
import { createContext, useCallback, useContext, useEffect, useState, } from "react";
import { useWalletConnectListener } from "../wallets/hooks/useWalletConnectListener";
import { useWalletContext } from "@thirdweb-dev/react-core";
const DappContext = createContext({});
export const DappContextProvider = (props) => {
    const [smartWallet, setSmartWallet] = useState();
    const [magicLink, setMagicLink] = useState();
    const createdWalletInstance = useWalletContext().createdWalletInstance;
    useEffect(() => {
        if (createdWalletInstance?.walletId === walletIds.magicLink) {
            setMagicLink(createdWalletInstance);
        }
    }, [createdWalletInstance, setMagicLink]);
    useWalletConnectListener();
    const magicSDK = useCallback(() => {
        if (magicLink) {
            const magic = magicLink.getMagicSDK();
            return <magic.Relayer />;
        }
        return null;
    }, [magicLink]);
    return (<DappContext.Provider value={{
            smartWallet,
            setSmartWallet,
            magicLink: magicLink,
            setMagicLink: setMagicLink,
        }}>
      {props.children}
      {magicSDK()}
    </DappContext.Provider>);
};
export const useDappContext = () => {
    return useContext(DappContext);
};
export const useSmartWallet = () => {
    const context = useContext(DappContext);
    return [context.smartWallet, context.setSmartWallet];
};
export const useMagicLink = () => {
    const context = useContext(DappContext);
    return {
        magicLink: context.magicLink,
        setMagicLink: context.setMagicLink,
    };
};
