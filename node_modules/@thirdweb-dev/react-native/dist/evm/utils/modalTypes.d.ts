import { WalletConfig } from "@thirdweb-dev/react-core";
import { WCProposal, WCRequest } from "@thirdweb-dev/wallets";
export declare const CLOSE_MODAL_STATE: (caller: Caller) => ModalState;
export type ModalView = "Closed" | "ConnectWalletFlow" | "ChooseWallet" | "WalletUI" | "WalletDetails" | "WCSessionRequest" | "WCSessionProposal";
export type Caller = "init" | "ConnectWallet" | "ConnectWalletDetails" | "ConnectWalletDetailsModal" | "ConnectWalletFlow" | "MainModal" | "SessionRequestModal" | "SessionProposalModal" | "WCSessionProposalListener" | "WCSessionRequestListener";
export type SheetModal = {
    isOpen: boolean;
    isSheet: true;
    caller: Caller;
};
export type DialogModal = {
    isOpen: boolean;
    isSheet: false;
    caller: Caller;
};
export type ClosedModal = {
    view: "Closed";
    data: Record<string, never>;
} & SheetModal;
export type ConnectWalletFlowData = {
    modalTitle?: string;
    modalTitleIconUrl?: string;
    termsOfServiceUrl?: string;
    privacyPolicyUrl?: string;
    walletConfig?: WalletConfig;
};
export type ConnectWalletFlowModal = {
    view: "ConnectWalletFlow";
    data: ConnectWalletFlowData;
} & SheetModal;
export type WalletDetailsData = {
    address: string;
};
export type WalletDetailsModal = {
    view: "WalletDetails";
    data: WalletDetailsData;
} & SheetModal;
export type WalletConnectSessionRequestModal = {
    view: "WalletConnectSessionRequestModal";
    data: WCRequest;
} & DialogModal;
export type WalletConnectSessionProposalModal = {
    view: "WalletConnectSessionProposalModal";
    data: WCProposal;
} & DialogModal;
export type ModalState = ClosedModal | ConnectWalletFlowModal | WalletDetailsModal | WalletConnectSessionRequestModal | WalletConnectSessionProposalModal;
