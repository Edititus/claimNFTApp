/// <reference types="react" />
import { ConnectWalletDetailsProps } from "./ConnectWalletDetails/WalletDetailsButton";
import { ConnectWalletButtonProps } from "./ConnectWalletFlow/ConnectWalletButton";
import { SupportedTokens } from "./SendFunds/defaultTokens";
export type ConnectWalletProps = {
    /**
     * render a custom button to display the connected wallet details instead of the default button
     */
    detailsButton?: ConnectWalletDetailsProps["detailsButton"];
    /**
     * render custom rows in the Connect Wallet Details modal
     */
    extraRows?: ConnectWalletDetailsProps["extraRows"];
    /**
     * Hide option to request testnet funds for testnets in dropdown
     *
     * @default false
     */
    hideTestnetFaucet?: boolean;
    /**
     * Whether to show "Switch Network" button if the wallet is connected,
     * but it is not connected to the `activeChain` provided in `ThirdwebProvider`
     *
     * Please, note that if you support multiple networks in your app this prop should
     * be set to `false` to allow users to switch between networks.
     *
     * @default false
     */
    switchToActiveChain?: boolean;
    /**
     * Override the default supported tokens for each network
     *
     * These tokens will be displayed in "Send Funds" Modal
     */
    supportedTokens?: SupportedTokens;
    /**
     * Show balance of ERC20 token instead of the native token  in the "Connected" button when connected to certain network
     *
     * @example
     * ```tsx
     * <ConnectWallet balanceToken={{
     *  1: "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599" // show USDC balance when connected to Ethereum mainnet
     * }} />
     * ```
     */
    displayBalanceToken?: Record<number, string>;
} & ConnectWalletButtonProps;
export declare const ConnectWallet: ({ detailsButton, theme, buttonTitle, modalTitle, modalTitleIconUrl, extraRows, hideTestnetFaucet, displayBalanceToken, switchToActiveChain, termsOfServiceUrl, privacyPolicyUrl, supportedTokens, }: ConnectWalletProps) => import("react").JSX.Element;
